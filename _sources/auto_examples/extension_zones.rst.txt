
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/extension_zones.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_extension_zones.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_extension_zones.py:


Extension Zone Demo
===================

Extension zones are a bit fiddly in PySALESetup. They need
to be created before the mesh object and fed in as arguments.

They must always be accompanied by an ExtensionZoneFactor as well
which dictates how much they alter the cell size by.

.. GENERATED FROM PYTHON SOURCE LINES 11-48



.. image-sg:: /auto_examples/images/sphx_glr_extension_zones_001.png
   :alt: Materials
   :srcset: /auto_examples/images/sphx_glr_extension_zones_001.png
   :class: sphx-glr-single-img





.. code-block:: Python


    from PySALESetup import PySALEObject, PySALEMesh
    from PySALESetup.mesh import ExtensionZone, Region, \
        ExtensionZoneFactor
    import matplotlib.pyplot as plt

    # Construct 4 extension zones: one for each region
    extension_zones = [ExtensionZone(15, region, 1.,
                                     ExtensionZoneFactor(1.05, 20))
                       for region in [Region.NORTH, Region.SOUTH,
                                      Region.EAST, Region.WEST]]

    # Build a mesh using the extension zones
    m = PySALEMesh(100, 100, extension_zones=extension_zones,
                   cell_size=1.)

    object1 = PySALEObject.generate_ellipse([56, 56],
                                            50., 50., material=1,
                                            rotation=0)
    object2 = PySALEObject.generate_ellipse([159, 159],
                                            50., 50., material=2,
                                            rotation=0)
    object3 = PySALEObject.generate_ellipse([107.2, 107.2],
                                            50., 50., material=3,
                                            rotation=0)


    m.project_polygons_onto_mesh([object1, object2, object3])

    f, ax = m.plot_materials()
    # NB x_range and y_range are cell centres, not cell edges!
    for item in m.x_range:
        ax.axvline(x=item, lw=0.2, color='m')
    for item in m.y_range:
        ax.axhline(y=item, lw=0.2, color='m')

    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.594 seconds)


.. _sphx_glr_download_auto_examples_extension_zones.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: extension_zones.ipynb <extension_zones.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: extension_zones.py <extension_zones.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: extension_zones.zip <extension_zones.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
